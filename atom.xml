<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.yzzi.top/</id>
    <title>一只科技菌</title>
    <updated>2020-07-28T10:10:56.371Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://blog.yzzi.top/"/>
    <link rel="self" href="https://blog.yzzi.top/atom.xml"/>
    <subtitle>我们一路奋战，不是为了改变世界，而是为了不让世界改变我们。</subtitle>
    <logo>https://blog.yzzi.top/images/avatar.png</logo>
    <icon>https://blog.yzzi.top/favicon.ico</icon>
    <rights>All rights reserved 2020, 一只科技菌</rights>
    <entry>
        <title type="html"><![CDATA[[软件安利] TinyPng4Mac，给图片来颗减肥药！]]></title>
        <id>https://blog.yzzi.top/T3Z7DHJ7X/</id>
        <link href="https://blog.yzzi.top/T3Z7DHJ7X/">
        </link>
        <updated>2020-07-28T08:37:08.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>TinyPng4Mac是一个基于在线图片压缩服务TinyPng开发的macos客户端。它可以通过简单的步骤轻松对图片进行压缩，压缩后的图片肉眼基本看不出跟原图的区别，可大小却能大大减小！</p>
</blockquote>
<h2 id="主要内容">主要内容</h2>
<blockquote>
<h4 id="什么是tinypng"><a href="#1">什么是TinyPng</a></h4>
<h4 id="tinypng4mac"><a href="#2">TinyPNG4Mac</a></h4>
<h4 id="怎么使用"><a href="#3">怎么使用？</a>相关文件下载地址</h4>
<h4 id="相关文件下载地址"><a href="#4">相关文件下载地址</a></h4>
</blockquote>
<h2 id="span-id-1什么是tinypngspan"><span id = "1">什么是<a href="https://tinypng.com/">TinyPng</a></span></h2>
<p><img src="https://i.loli.net/2020/07/28/K62nSkmDPLAIdVG.png" alt="" loading="lazy"><br>
  <a href="https://tinypng.com/">TinyPng</a>是一个在线的图片有损压缩服务，通过减少颜色数量达到压缩大小的效果，很多图片用<a href="https://tinypng.com/">TinyPng</a>能达到70%甚至更高的压缩比。<a href="https://tinypng.com/">TinyPng</a>提供开放API，但是每个用户每月只能使用免费API压缩500张图。</p>
<h2 id="span-id-2tinypng4macspan"><span id = "2"><a href="https://github.com/kyleduo/TinyPNG4Mac">TinyPNG4Mac</a></span></h2>
<p><img src="https://i.loli.net/2020/07/28/QoMngCdUk7rmjzs.png" alt="" loading="lazy"><br>
  <a href="https://github.com/kyleduo/TinyPNG4Mac">TinyPNG4Mac</a>是<a href="https://tinypng.com/">TinyPng</a>的一个macos客户端。使用它，你可以通过简单的拖拽来完成对图片的压缩，而无需打开浏览器，无需手动下载图片</p>
<h2 id="span-id-3怎么使用span"><span id = "3">怎么使用？</span></h2>
<p><img src="https://i.loli.net/2020/07/28/QdenYk6OmL9t7gy.png" alt="" loading="lazy"><br>
  要想使用<a href="https://github.com/kyleduo/TinyPNG4Mac">TinyPNG4Mac</a>，首先你需要申请<a href="https://tinypng.com/developers">TinyPng的API</a>。在输入框中填入姓名以及邮箱，即可快速申请到API。<br>
<img src="https://i.loli.net/2020/07/28/KSO5LI8zTFdQbp1.png" alt="" loading="lazy"><br>
  把申请到的API填入<a href="https://github.com/kyleduo/TinyPNG4Mac">TinyPNG4Mac</a>中即可使用。</p>
<h2 id="span-id-4相关文件下载地址span"><span id = "4">相关文件下载地址</span></h2>
<blockquote>
<p>软件官网：<a href="https://github.com/kyleduo/TinyPNG4Mac">Github</a><br>
软件性质：开源免费<br>
下载地址：<a href="https://github.com/kyleduo/TinyPNG4Mac/releases">Github Releases</a>  <a href="https://yzzi.lanzous.com/ilhfOf2hq9e">蓝奏云</a></p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何拥有一个访问速度超快的个人博客？GitHub+Vercel+Gridea]]></title>
        <id>https://blog.yzzi.top/5wwqheMyp/</id>
        <link href="https://blog.yzzi.top/5wwqheMyp/">
        </link>
        <updated>2020-07-27T09:03:22.000Z</updated>
        <content type="html"><![CDATA[<h2 id="主要内容">主要内容</h2>
<blockquote>
<h4 id="为什么需要个人博客"><a href="#1">为什么需要个人博客？</a></h4>
<h4 id="创建github仓库"><a href="#2">创建GitHub仓库</a></h4>
<h4 id="创建一个"><a href="#3">创建一个<code>tokens</code></a></h4>
<h4 id="下载gridea"><a href="#4">下载Gridea</a></h4>
<h4 id="设置gridea"><a href="#5">设置Gridea</a></h4>
<h4 id="同步到github"><a href="#6">同步到GitHub</a></h4>
<h4 id="用vercel加速博客"><a href="#7">用Vercel加速博客</a></h4>
<h4 id="结束"><a href="#8">结束</a></h4>
<h4 id="参考文档"><a href="#9">参考文档</a></h4>
</blockquote>
<h2 id="span-id-1为什么需要个人博客span"><span id = "1">为什么需要个人博客？</span></h2>
<p>  在网上搜索东西，你会发现，许多优质内容总是来自个人博客。个人博客不仅能帮助他人获取信息，也能帮自己记录有用的信息，充当笔记本。“对任何渴望进步的人来说，写博客/文章/回答对自己的成长帮助都是巨大的。频率和数量不必过分强求，有话要说就写写，没事就歇歇，随意点。因为坚持写作的那一刻起，你就已经开始受益。”</p>
<h2 id="span-id-2创建github仓库span"><span id = "2">创建GitHub仓库</span></h2>
<p>  你需要一个<code>GitHub</code>仓库用于存放博客的静态页面文件。注意，本文并没有用到<code>GitHub Page</code>功能，因此仓库名可随意取。（如果不知道<code>GitHub</code>是什么请百度）</p>
<h2 id="span-id-3创建一个tokensspan"><span id = "3">创建一个<code>tokens</code></span></h2>
<p>  你需要一个<code>Tokens</code>用于<code>Gridea</code>的同步。</p>
<h3 id="1访问httpsgithubcomsettingstokens">  1.访问<a href="https://github.com/settings/tokens">https://github.com/settings/tokens</a></h3>
<h3 id="2创建新tokens">  2.创建新<code>Tokens</code></h3>
<p>    在创建<code>Tokens</code>时，名字可随意，只需勾选<code>repo</code>相关权限即可，如下图<br>
<img src="https://i.loli.net/2020/07/27/WYKyD1daIjPqBLk.png" alt="" loading="lazy"></p>
<h2 id="span-id-4下载grideaspan"><span id = "4">下载Gridea</span></h2>
<p>  <a href="https://gridea.dev/#started">Gridea官网</a>，请选择对应的系统版本下载并安装。</p>
<h2 id="span-id-5设置grideaspan"><span id = "5">设置Gridea</span></h2>
<p>  按照下图填写好相应信息（前面几步获取的仓库名和<code>Tokens</code>）<br>
<img src="https://i.loli.net/2020/07/27/3GCD8PRLFjJAMlX.png" alt="" loading="lazy"></p>
<h2 id="span-id-6同步到githubspan"><span id = "6">同步到GitHub</span></h2>
<p>  设置好上一步的信息并检测远程连接没问题的话，就可以同步到<code>GitHub</code>啦！<br>
<img src="https://i.loli.net/2020/07/27/HImpx6iQJWKMyZB.png" alt="" loading="lazy"></p>
<h2 id="span-id-7用vercel加速博客span"><span id = "7">用Vercel加速博客</span></h2>
<p>  由于<code>GitHub</code>访问速度过慢，我们需要使用<code>Vercel</code>加速。</p>
<h3 id="1登陆vercel">  1.登陆<a href="https://vercel.com/login">Vercel</a></h3>
<p>    直接使用GitHub登陆即可</p>
<h3 id="2导入github仓库">  2.导入GitHub仓库</h3>
<p>    打开<a href="https://vercel.com/import/git">https://vercel.com/import/git</a>导入GitHub仓库<br>
<img src="https://i.loli.net/2020/07/27/MZCQXAE2YL1HScp.png" alt="" loading="lazy"></p>
<h3 id="3绑定域名">  3.绑定域名</h3>
<p>    仓库导入后，便可在项目设置中绑定域名或者使用<code>Vercel</code>提供的二级域名<br>
<img src="https://i.loli.net/2020/07/27/r68HetjWKLNaToM.png" alt="" loading="lazy"></p>
<h2 id="span-id-8结束span"><span id = "8">结束</span></h2>
<p>  按照上面做完以后，你就能得到一个地址为<code>xxxx.vercel.app</code>的博客啦，并且可以通过<code>https</code>访问，国内速度还超快哦。</p>
<h2 id="span-id-9参考文档span"><span id = "9">参考文档</span></h2>
<p><strong>  <a href="https://gridea.dev/docs/">Gridea官方文档</a></strong><br>
<strong>  <a href="https://vercel.com/docs">Vercel官方文档</a></strong></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于Markdown]]></title>
        <id>https://blog.yzzi.top/eNlnQbSJX/</id>
        <link href="https://blog.yzzi.top/eNlnQbSJX/">
        </link>
        <updated>2014-07-27T09:03:22.000Z</updated>
        <content type="html"><![CDATA[<h2 id="主要内容">主要内容</h2>
<blockquote>
<h4 id="markdown"><a href="#1">Markdown<em>是什么</em>？</a></h4>
<h4 id=""><a href="#2"><em>谁</em>创造了它？</a></h4>
<h4 id="-2"><a href="#3"><em>为什么</em>要使用它？</a></h4>
<h4 id="-3"><a href="#4"><em>怎么</em>使用？</a></h4>
<h4 id="-4"><a href="#5"><em>谁</em>在用？</a></h4>
<h4 id="尝试一下"><a href="#6">尝试一下</a></h4>
</blockquote>
<h2 id="正文">正文</h2>
<h3 id="span-id-11-markdown是什么span"><span id = "1">1. Markdown<em>是什么</em>？</span></h3>
<p>  <strong>Markdown</strong>是一种轻量级<strong>标记语言</strong>，它以纯文本形式(<em>易读、易写、易更改</em>)编写文档，并最终以HTML格式发布。<br>
  <strong>Markdown</strong>也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。</p>
<h3 id="2-span-id-2谁创造了它span">2. <span id = "2"><em>谁</em>创造了它？</span></h3>
<p>  它由<a href="http://www.aaronsw.com/"><strong>Aaron Swartz</strong></a>和<strong>John Gruber</strong>共同设计，<strong>Aaron Swartz</strong>就是那位于去年（<em>2013年1月11日</em>）自杀,有着<strong>开挂</strong>一般人生经历的程序员。维基百科对他的<a href="http://zh.wikipedia.org/wiki/%E4%BA%9A%E4%BC%A6%C2%B7%E6%96%AF%E6%B2%83%E8%8C%A8">介绍</a>是：<strong>软件工程师、作家、政治组织者、互联网活动家、维基百科人</strong>。</p>
<p>  他有着足以让你跪拜的人生经历：</p>
<ul>
<li><strong>14岁</strong>参与RSS 1.0规格标准的制订。</li>
<li><strong>2004</strong>年入读<strong>斯坦福</strong>，之后退学。</li>
<li><strong>2005</strong>年创建<a href="http://infogami.org/">Infogami</a>，之后与<a href="http://www.reddit.com/">Reddit</a>合并成为其合伙人。</li>
<li><strong>2010</strong>年创立求进会（Demand Progress），积极参与禁止网络盗版法案（SOPA）活动，最终该提案被撤回。</li>
<li><strong>2011</strong>年7月19日，因被控从MIT和JSTOR下载480万篇学术论文并以免费形式上传于网络被捕。</li>
<li><strong>2013</strong>年1月自杀身亡。</li>
</ul>
<figure data-type="image" tabindex="1"><img src="https://i.loli.net/2020/07/28/wCn2c5HAV3EYgjz.jpg" alt="Aaron Swartz" loading="lazy"></figure>
<p>  天才都有早逝的归途。</p>
<h3 id="3-span-id-3为什么要使用它span">3. <span id = "3"><em>为什么</em>要使用它？</span></h3>
<ul>
<li>它是易读（看起来舒服）、易写（语法简单）、易更改<strong>纯文本</strong>。处处体现着<strong>极简主义</strong>的影子。</li>
<li>兼容HTML，可以转换为HTML格式发布。</li>
<li>跨平台使用。</li>
<li>越来越多的网站支持Markdown。</li>
<li>更方便清晰地组织你的电子邮件。（Markdown-here, Airmail）</li>
<li>摆脱Word（我不是认真的）。</li>
</ul>
<h3 id="4-span-id-4怎么使用span">4. <span id = "4"><em>怎么</em>使用？</span></h3>
<p>  如果不算<strong>扩展</strong>，Markdown的语法绝对<strong>简单</strong>到让你爱不释手。</p>
<p>  Markdown语法主要分为如下几大部分：<br>
  <strong>标题</strong>，<strong>段落</strong>，<strong>区块引用</strong>，<strong>代码区块</strong>，<strong>强调</strong>，<strong>列表</strong>，<strong>分割线</strong>，<strong>链接</strong>，<strong>图片</strong>，<strong>反斜杠 <code>\</code></strong>，<strong>符号'`'</strong>。</p>
<h4 id="41-标题">4.1 标题</h4>
<p>  两种形式：<br>
  1）使用<code>=</code>和<code>-</code>标记一级和二级标题。</p>
<blockquote>
<p>一级标题<br>
<code>=========</code><br>
二级标题<br>
<code>---------</code></p>
</blockquote>
<p>  效果：</p>
<blockquote>
<h1 id="一级标题">一级标题</h1>
<h2 id="二级标题">二级标题</h2>
</blockquote>
<p>  2）使用<code>#</code>，可表示1-6级标题。</p>
<blockquote>
<p># 一级标题<br>
## 二级标题<br>
### 三级标题<br>
#### 四级标题<br>
##### 五级标题<br>
###### 六级标题</p>
</blockquote>
<p>  效果：</p>
<blockquote>
<h1 id="一级标题-2">一级标题</h1>
<h2 id="二级标题-2">二级标题</h2>
<h3 id="三级标题">三级标题</h3>
<h4 id="四级标题">四级标题</h4>
<h5 id="五级标题">五级标题</h5>
<h6 id="六级标题">六级标题</h6>
</blockquote>
<h4 id="42-段落">4.2 段落</h4>
<p>  段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用<strong>两个以上</strong>空格加上回车（引用中换行省略回车）。</p>
<h4 id="43-区块引用">4.3 区块引用</h4>
<p>  在段落的每行或者只在第一行使用符号<code>&gt;</code>,还可使用多个嵌套引用，如：</p>
<blockquote>
<p>&gt; 区块引用<br>
&gt;&gt; 嵌套引用</p>
</blockquote>
<p>  效果：</p>
<blockquote>
<p>区块引用</p>
<blockquote>
<p>嵌套引用</p>
</blockquote>
</blockquote>
<h4 id="44-代码区块">4.4 代码区块</h4>
<p>  代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）。如<br>
  普通段落：</p>
<p>void main()<br>
{<br>
printf(&quot;Hello, Markdown.&quot;);<br>
}</p>
<p>  代码区块：</p>
<pre><code>void main()
{
    printf(&quot;Hello, Markdown.&quot;);
}
</code></pre>
<p>  <strong>注意</strong>:需要和普通段落之间存在空行。</p>
<h4 id="45-强调">4.5 强调</h4>
<p>  在强调内容两侧分别加上<code>*</code>或者<code>_</code>，如：</p>
<blockquote>
<p>*斜体*，_斜体_<br>
**粗体**，__粗体__</p>
</blockquote>
<p>  效果：</p>
<blockquote>
<p><em>斜体</em>，<em>斜体</em><br>
<strong>粗体</strong>，<strong>粗体</strong></p>
</blockquote>
<h4 id="46-列表">4.6 列表</h4>
<p>  使用<code>·</code>、<code>+</code>、或<code>-</code>标记无序列表，如：</p>
<blockquote>
<p>-（+*） 第一项<br>
-（+*） 第二项<br>
- （+*）第三项</p>
</blockquote>
<p>  <strong>注意</strong>：标记后面最少有一个_空格_或_制表符_。若不在引用区块中，必须和前方段落之间存在空行。</p>
<p>  效果：</p>
<blockquote>
<ul>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ul>
</blockquote>
<p>  有序列表的标记方式是将上述的符号换成数字,并辅以<code>.</code>，如：</p>
<blockquote>
<p>1 . 第一项<br>
2 . 第二项<br>
3 . 第三项</p>
</blockquote>
<p>  效果：</p>
<blockquote>
<ol>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ol>
</blockquote>
<h4 id="47-分割线">4.7 分割线</h4>
<p>  分割线最常使用就是三个或以上<code>*</code>，还可以使用<code>-</code>和<code>_</code>。</p>
<h4 id="48-链接">4.8 链接</h4>
<p>  链接可以由两种形式生成：<strong>行内式</strong>和<strong>参考式</strong>。<br>
<strong>行内式</strong>：</p>
<blockquote>
<p>[younghz的Markdown库](https:😕/github.com/younghz/Markdown &quot;Markdown&quot;)。</p>
</blockquote>
<p>  效果：</p>
<blockquote>
<p><a href="https:://github.com/younghz/Markdown" title="Markdown">younghz的Markdown库</a>。</p>
</blockquote>
<p><strong>参考式</strong>：</p>
<blockquote>
<p>[younghz的Markdown库1][1]<br>
[younghz的Markdown库2][2]<br>
[1]:https:😕/github.com/younghz/Markdown &quot;Markdown&quot;<br>
[2]:https:😕/github.com/younghz/Markdown &quot;Markdown&quot;</p>
</blockquote>
<p>  效果：</p>
<blockquote>
<p><a href="https:://github.com/younghz/Markdown" title="Markdown">younghz的Markdown库1</a><br>
<a href="https:://github.com/younghz/Markdown" title="Markdown">younghz的Markdown库2</a></p>
</blockquote>
<p>  <strong>注意</strong>：上述的<code>[1]:https:://github.com/younghz/Markdown &quot;Markdown&quot;</code>不出现在区块中。</p>
<h4 id="49-图片">4.9 图片</h4>
<p>  添加图片的形式和链接相似，只需在链接的基础上前方加一个<code>！</code>。</p>
<h4 id="410-反斜杠">4.10 反斜杠<code>\</code></h4>
<p>  相当于<strong>反转义</strong>作用。使符号成为普通符号。</p>
<h4 id="411-符号">4.11 符号'`'</h4>
<p>  起到标记作用。如：</p>
<blockquote>
<p>`ctrl+a`</p>
</blockquote>
<p>  效果：</p>
<blockquote>
<p><code>ctrl+a</code></p>
</blockquote>
<h4 id="5-span-id-5谁在用span">5. <span id = "5"><em>谁</em>在用？</span></h4>
<p>  Markdown的使用者：</p>
<ul>
<li>GitHub</li>
<li>简书</li>
<li>Stack Overflow</li>
<li>Apollo</li>
<li>Moodle</li>
<li>Reddit</li>
<li>等等</li>
</ul>
<h4 id="6-span-id-6尝试一下span">6. <span id = "6">尝试一下</span></h4>
<ul>
<li><strong>Chrome</strong>下的插件诸如<code>stackedit</code>与<code>markdown-here</code>等非常方便，也不用担心平台受限。</li>
<li><strong>在线</strong>的dillinger.io评价也不错</li>
<li><strong>Windowns</strong>下的MarkdownPad也用过，不过免费版的体验不是很好。</li>
<li><strong>Mac</strong>下的Mou是国人贡献的，口碑很好。</li>
<li><strong>Linux</strong>下的ReText不错。</li>
</ul>
<p>  <strong>当然，最终境界永远都是笔下是语法，心中格式化 😃。</strong></p>
<hr>
<p>  <strong>注意</strong>：不同的Markdown解释器或工具对相应语法（扩展语法）的解释效果不尽相同，具体可参见工具的使用说明。<br>
  虽然有人想出面搞一个所谓的标准化的Markdown，[没想到还惹怒了健在的创始人John Gruber]<br>
(http://blog.codinghorror.com/standard-markdown-is-now-common-markdown/ )。</p>
<hr>
<p>  以上基本是所有traditonal markdown的语法。</p>
<h3 id="其它">其它：</h3>
<p>  列表的使用(非traditonal markdown)：</p>
<p>  用<code>|</code>表示表格纵向边界，表头和表内容用<code>-</code>隔开，并可用<code>:</code>进行对齐设置，两边都有<code>:</code>则表示居中，若不加<code>:</code>则默认左对齐。</p>
<table>
<thead>
<tr>
<th style="text-align:center">代码库</th>
<th>链接</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">MarkDown</td>
<td><a href="https://github.com/younghz/Markdown" title="Markdown">https://github.com/younghz/Markdown</a></td>
</tr>
<tr>
<td style="text-align:center">MarkDownCopy</td>
<td><a href="https://github.com/younghz/Markdown" title="Markdown">https://github.com/younghz/Markdown</a></td>
</tr>
</tbody>
</table>
<p>  关于其它扩展语法可参见具体工具的使用说明。<br>
/etc/gesture/xx-touchpad-xx.conf</p>
]]></content>
    </entry>
</feed>